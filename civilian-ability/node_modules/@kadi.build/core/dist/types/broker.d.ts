/**
 * Re-export protocol types for backward compatibility
 * @deprecated Import directly from './protocol' instead
 */
export * from './protocol.js';
import { KadiProtocol, JsonRpcRequest } from './protocol.js';
export type KadiHelloParams = KadiProtocol.HelloParams;
export type KadiHelloResult = KadiProtocol.HelloResult;
export type KadiAuthenticateParams = KadiProtocol.AuthenticateParams;
export type KadiAuthenticateResult = KadiProtocol.AuthenticateResult;
export type KadiTool = KadiProtocol.Tool;
export type KadiRegisterCapabilitiesParams = KadiProtocol.RegisterCapabilitiesParams;
export type KadiRegisterCapabilitiesResult = KadiProtocol.RegisterCapabilitiesResult;
export type KadiCallAbilityParams = KadiProtocol.CallAbilityParams;
export type KadiAbilityResultParams = KadiProtocol.AbilityResultParams;
export interface BrokerMessageBuilder {
    registerCapabilities(params: KadiRegisterCapabilitiesParams): MessageBuilder;
    hello(params: KadiHelloParams): MessageBuilder;
    authenticate(params: KadiAuthenticateParams): MessageBuilder;
    callAbility(params: KadiCallAbilityParams): MessageBuilder;
    abilityResult(params: KadiAbilityResultParams): MessageBuilder;
    ping(): MessageBuilder;
    listTools(): MessageBuilder;
}
export interface MessageBuilder {
    params(obj: unknown): MessageBuilder;
    id(id: string | number): MessageBuilder;
    build(): JsonRpcRequest;
    toString(): string;
}
//# sourceMappingURL=broker.d.ts.map